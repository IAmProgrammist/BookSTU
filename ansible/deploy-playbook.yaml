- name: deploy
  hosts: all
  tasks:
    - name: Ensure ansible user is in the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      become: yes

    - name: Restart Docker
      ansible.builtin.service:
        name: snap.docker.dockerd
        state: restarted
      become: yes

    - name: create app dir
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/application"
        state: directory

    - name: copy .env
      ansible.builtin.template:
        src: example.env.j2
        dest: "{{ ansible_env.HOME }}/application/.env"

    - name: copy docker-compose.yaml
      ansible.builtin.template:
        src: docker-compose.yaml.j2
        dest: "{{ ansible_env.HOME }}/application/docker-compose.yaml"

    - name: Check if docker-compose.yaml exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/application/docker-compose.yaml"
      register: compose_file_status

    - debug:
        var: compose_file_status.stat.exists
    - name: Log in to GitHub Container Registry
      environment:
        ghcr_pat: "{{ lookup('env', 'GHCR_PAT') }}"
        github_actor: "{{ lookup('env', 'GITHUB_ACTOR') }}"
      ansible.builtin.shell: |
        echo "{{ ghcr_pat }}" | docker login ghcr.io -u {{ github_actor }} --password-stdin
      become: yes
    - name: start app
      community.docker.docker_compose_v2:
        project_src: "{{ ansible_env.HOME }}/application"
        state: present
        recreate: always
